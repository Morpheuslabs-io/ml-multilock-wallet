{
  "version": "3.2",
  "log": [
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "9c858c27a8713aadc29c2c032546be4ed8180dda0d7b45d16929302dd8177e45",
          "withoutMetadata": "02133d2a8ffa836c07a508f43fb013c0b50f25b496d17bad360e9590f81d9807",
          "linkedWithoutMetadata": "02133d2a8ffa836c07a508f43fb013c0b50f25b496d17bad360e9590f81d9807"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts/mock/Token.sol:6",
        "version": {
          "withMetadata": "c29d42ea435b1de4af0f7a5d222572553aa63b0cd4ffe8fe757d43c3219e1314",
          "withoutMetadata": "d0cbf978c718a59710c1052dc5b343ca0a1cfda9d5809483d73255f93ea61c59",
          "linkedWithoutMetadata": "d0cbf978c718a59710c1052dc5b343ca0a1cfda9d5809483d73255f93ea61c59"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/mock/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "9c858c27a8713aadc29c2c032546be4ed8180dda0d7b45d16929302dd8177e45",
          "withoutMetadata": "02133d2a8ffa836c07a508f43fb013c0b50f25b496d17bad360e9590f81d9807",
          "linkedWithoutMetadata": "02133d2a8ffa836c07a508f43fb013c0b50f25b496d17bad360e9590f81d9807"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "bf108f39f22c2b9263b04a9da930b2dc23f030c50d18ec512df9fcc6a69a7537",
          "withoutMetadata": "1b15ed3a08afc735703bcf48e2fed508267400db71c7125f9ce785214e7f8519",
          "linkedWithoutMetadata": "1b15ed3a08afc735703bcf48e2fed508267400db71c7125f9ce785214e7f8519"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "b153ba4c0ea5f4df8e622d1ad3661ed631d487e7bb45ea5a4e8a73eb4c311bcf",
          "withoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b",
          "linkedWithoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:13"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)835_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)835_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)835_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/mock/Token.sol:6",
        "version": {
          "withMetadata": "c29d42ea435b1de4af0f7a5d222572553aa63b0cd4ffe8fe757d43c3219e1314",
          "withoutMetadata": "d0cbf978c718a59710c1052dc5b343ca0a1cfda9d5809483d73255f93ea61c59",
          "linkedWithoutMetadata": "d0cbf978c718a59710c1052dc5b343ca0a1cfda9d5809483d73255f93ea61c59"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/mock/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "bf108f39f22c2b9263b04a9da930b2dc23f030c50d18ec512df9fcc6a69a7537",
          "withoutMetadata": "1b15ed3a08afc735703bcf48e2fed508267400db71c7125f9ce785214e7f8519",
          "linkedWithoutMetadata": "1b15ed3a08afc735703bcf48e2fed508267400db71c7125f9ce785214e7f8519"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "b153ba4c0ea5f4df8e622d1ad3661ed631d487e7bb45ea5a4e8a73eb4c311bcf",
          "withoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b",
          "linkedWithoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:13"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "bf108f39f22c2b9263b04a9da930b2dc23f030c50d18ec512df9fcc6a69a7537",
          "withoutMetadata": "1b15ed3a08afc735703bcf48e2fed508267400db71c7125f9ce785214e7f8519",
          "linkedWithoutMetadata": "1b15ed3a08afc735703bcf48e2fed508267400db71c7125f9ce785214e7f8519"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "b153ba4c0ea5f4df8e622d1ad3661ed631d487e7bb45ea5a4e8a73eb4c311bcf",
          "withoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b",
          "linkedWithoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:13"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "7424291059f42dda28789d7243222c0758f60a6fd6bcbbea9c378d25089d95ed",
          "withoutMetadata": "1b32045f15d6acb5927c73ee3e3b8d6fe513d254b3dc9e85e4cf3558dc763f8f",
          "linkedWithoutMetadata": "1b32045f15d6acb5927c73ee3e3b8d6fe513d254b3dc9e85e4cf3558dc763f8f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "144e5582acba480709ed704ab764176c2fe53a6ba3d203173636792066331df3",
          "withoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b",
          "linkedWithoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:16"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "12a190fe29142cc28a8662d9d676d51f990c4c9e76ae58f14d7a45e0443a913f",
          "withoutMetadata": "c222251741cbd07f5194c46f324793e7cab30eb1715e23d60c266c5d5f1aee2f",
          "linkedWithoutMetadata": "c222251741cbd07f5194c46f324793e7cab30eb1715e23d60c266c5d5f1aee2f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "b144ee1efa564044e86535401d8ffd9e61fc0a9eff191f53d632b025d2188092",
          "withoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b",
          "linkedWithoutMetadata": "88384e9efd9445b0cc050ed7ebe98619b84c32533a1275bb3d7430586fc7834b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:16"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "875f1f7cd5349c2683f353aa597b4b4cccb82bfd27d41e1e85c974fd9ee31f51",
          "withoutMetadata": "0ecf01968f8e53373d4b9458ca1249e0c32ad750a963d1c408fceb72751f18bb",
          "linkedWithoutMetadata": "0ecf01968f8e53373d4b9458ca1249e0c32ad750a963d1c408fceb72751f18bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "309f12c998d6b08b5b606431a772957dbcd34452c24ff1d16c2635657cbe031b",
          "withoutMetadata": "c904f2c1ca98967ea5b0b5bc909a0451e0aebf65ee43e922c818cfc056939577",
          "linkedWithoutMetadata": "c904f2c1ca98967ea5b0b5bc909a0451e0aebf65ee43e922c818cfc056939577"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:16"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "1201e4dd90812212bea8a52c6712449af40bad14305e0198f65e6f84e241d445",
          "withoutMetadata": "f19fd08bfb100bf0e5cd756d23053e2e8d38e2eb93d515727d86fbb093dd6039",
          "linkedWithoutMetadata": "f19fd08bfb100bf0e5cd756d23053e2e8d38e2eb93d515727d86fbb093dd6039"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "8b0011b7b782c2627cc87503630ee67cd27e7173ed8ba81a1c4f0ddfdf77bc79",
          "withoutMetadata": "c904f2c1ca98967ea5b0b5bc909a0451e0aebf65ee43e922c818cfc056939577",
          "linkedWithoutMetadata": "c904f2c1ca98967ea5b0b5bc909a0451e0aebf65ee43e922c818cfc056939577"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:16"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "fbb59c1c1e624ab965d09ab8a1db7832e28811cb2dce7d9d2b4b5be1a2446c2f",
          "withoutMetadata": "2949b0e7753bd65cd08d55ed8f6b41357254848a931911ffdc46e711d0b58725",
          "linkedWithoutMetadata": "2949b0e7753bd65cd08d55ed8f6b41357254848a931911ffdc46e711d0b58725"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "4cfc0a75fba6723f85e13608bddf5580da6e06ee813aba1cebbedfc3c2f6de5e",
          "withoutMetadata": "c904f2c1ca98967ea5b0b5bc909a0451e0aebf65ee43e922c818cfc056939577",
          "linkedWithoutMetadata": "c904f2c1ca98967ea5b0b5bc909a0451e0aebf65ee43e922c818cfc056939577"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:16"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "9c858c27a8713aadc29c2c032546be4ed8180dda0d7b45d16929302dd8177e45",
          "withoutMetadata": "02133d2a8ffa836c07a508f43fb013c0b50f25b496d17bad360e9590f81d9807",
          "linkedWithoutMetadata": "02133d2a8ffa836c07a508f43fb013c0b50f25b496d17bad360e9590f81d9807"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts/mock/Token.sol:6",
        "version": {
          "withMetadata": "c29d42ea435b1de4af0f7a5d222572553aa63b0cd4ffe8fe757d43c3219e1314",
          "withoutMetadata": "d0cbf978c718a59710c1052dc5b343ca0a1cfda9d5809483d73255f93ea61c59",
          "linkedWithoutMetadata": "d0cbf978c718a59710c1052dc5b343ca0a1cfda9d5809483d73255f93ea61c59"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/mock/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "81f7210f97575cd102c74a42863c8e4c53a81c2e596f53ae8ef5797e63e0db74",
          "withoutMetadata": "eece3597e157f55cdf70de745cd2ba101b0953ec9ec6f5e17fc2b4805f5f949c",
          "linkedWithoutMetadata": "eece3597e157f55cdf70de745cd2ba101b0953ec9ec6f5e17fc2b4805f5f949c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "c67eb0d245564d41fd3c37211b7939c32e3320c7d501cfd8019f7a0cc9bc1feb",
          "withoutMetadata": "d007747fed6f903aaed9165ac4a420ab89418bfc6c8ce72bae6c176515b4ec61",
          "linkedWithoutMetadata": "d007747fed6f903aaed9165ac4a420ab89418bfc6c8ce72bae6c176515b4ec61"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:16"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockedWalletFactory": {
        "src": "contracts/TimeLockedWalletFactory.sol:6",
        "version": {
          "withMetadata": "3c69ed4a322a72d62021ddfe5fbfcb0e7089015ce537f0f0a20ec7107dc5d6fd",
          "withoutMetadata": "b645ee6ca811cf741f288265b460034dc87e48458386ded0e3a23841343c852b",
          "linkedWithoutMetadata": "b645ee6ca811cf741f288265b460034dc87e48458386ded0e3a23841343c852b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getWallets(address)",
          "newTimeLockedWallet(address,uint256[],uint256[])",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "wallets",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "TimeLockedWalletFactory",
              "src": "contracts/TimeLockedWalletFactory.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TokenTimeLockedWallet": {
        "src": "contracts/TokenTimeLockedWallet.sol:6",
        "version": {
          "withMetadata": "c67eb0d245564d41fd3c37211b7939c32e3320c7d501cfd8019f7a0cc9bc1feb",
          "withoutMetadata": "d007747fed6f903aaed9165ac4a420ab89418bfc6c8ce72bae6c176515b4ec61",
          "linkedWithoutMetadata": "d007747fed6f903aaed9165ac4a420ab89418bfc6c8ce72bae6c176515b4ec61"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,uint256[],uint256[])",
          "addNewLock(uint256,uint256)",
          "withdrawTokens(address)",
          "info()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimeLockedWallet",
            "src": "contracts/TokenTimeLockedWallet.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "creator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:14"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:15"
            },
            {
              "label": "createdAt",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:16"
            },
            {
              "label": "locks",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(LockLevel)202_storage)dyn_storage",
              "contract": "TokenTimeLockedWallet",
              "src": "contracts/TokenTimeLockedWallet.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(LockLevel)202_storage)dyn_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(LockLevel)202_storage": {
              "label": "struct TokenTimeLockedWallet.LockLevel",
              "members": [
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isWithdraw",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}